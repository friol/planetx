// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef SHADER_CODE_H_
# define SHADER_CODE_H_
# define VAR_o "v"

const char *fragment_frag =
 "#version 130\n"
 "out vec4 v;"
 "float x=gl_TexCoord[0].x/1000;"
 "vec2 y=vec2(gl_TexCoord[0].y,gl_TexCoord[0].z),f=gl_FragCoord.xy-.5*y;"
 "vec2 t(ivec2 v)"
 "{"
   "int x=v.x+v.y*21111;"
   "x^=x<<13;"
   "float a=x*(x*x*15+21)+19>>16;"
   "return vec2(cos(a),sin(a));"
 "}"
 "float s(vec2 v)"
 "{"
   "ivec2 x=ivec2(floor(v));"
   "v=fract(v);"
   "vec2 y=v*v*(3.-2.*v);"
   "return mix(mix(dot(t(x+ivec2(0,0)),v-vec2(0)),dot(t(x+ivec2(1,0)),v-vec2(1,0)),y.x),mix(dot(t(x+ivec2(0,1)),v-vec2(0,1)),dot(t(x+ivec2(1,1)),v-vec2(1)),y.x),y.y);"
 "}"
 "vec3 s()"
 "{"
   "vec2 v=f/y.y;"
   "float r,a,m;"
   "for(m=0;m<70;m++)"
     "{"
       "vec2 y=v*m*.1/(2*v.y+1.8);"
       "y.x-=x*.5;"
       "mat2 f=mat2(1.6,1.2,-1.2,1.6);"
       "r=.5*s(y);"
       "y=f*y*1.1;"
       "r+=.25*s(y);"
       "y*=f;"
       "r+=.125*s(y);"
       "y*=f;"
       "r=smoothstep(-.04,.7,r);"
       "a+=r;"
     "}"
   "a/=59.5;"
   "v=f/y+.5;"
   "v=v*(1.-v)*6.;"
   "vec3 z=pow(v.x*v.y,.5)*mix(vec3(smoothstep(-.11,1.1,a)),vec3(6,2,.5),smoothstep(.05,1.,a));"
   "return z*2*vec3(.82,1.5,2.5);"
 "}"
 "float s(vec2 v,float x)"
 "{"
   "return(.015/length(v)+max(.01,.5-abs(v.x*v.y*1e3))*x*.1)*smoothstep(1,.1,length(v));"
 "}"
 "float n(vec2 v)"
 "{"
   "v=fract(v*vec2(123.3,456.2));"
   "v+=dot(v,v+45.32);"
   "return fract(v.x*v.y);"
 "}"
 "vec3 n(vec2 v,float x)"
 "{"
   "vec3 r=vec3(0);"
   "for(int y=-1;y<=1;y++)"
     "for(int f=-1;f<=1;f++)"
       "{"
         "vec2 a=vec2(f,y);"
         "float m=n(floor(v)+a),z=fract(m);"
         "r+=s(fract(v)-a-vec2(m,fract(m*34.))+.5,smoothstep(.1,.9,z)*.46)*(sin(x*.6+m*6.28)*.5+.5)*z*(sin(vec3(.12,.51,.79)*fract(m*2.2)*6.28)*.25+.75)*vec3(.69,.59,.49+z);"
       "}"
   "return r;"
 "}"
 "vec3 n()"
 "{"
   "vec3 v;"
   "for(float r=0;r<1;r+=.2)"
     "{"
       "float a=fract(r+x*.0015);"
       "v+=n(f/y.y*mix(20.,.5,a)+r*453.2-x*.05,x)*a*smoothstep(1.,.9,a);"
     "}"
   "return v;"
 "}"
 "void p(vec2 a)"
 "{"
   "vec2 m=x<32?"
     "vec2(1):"
     "f/y.y;"
   "vec4 r=v;"
   "a.y+=x<32?"
     "1500.-x*9:"
     "0;"
   "a-=v.xy=y.xy*.5;"
   "v=.8-sqrt(max(v-v,1.-dot(a/=x<32?"
     "v.y*2:"
     "v.y*.5,a)));"
   "v=(1.-v)/3.2*min(v+a.x+a.y*.8,-.1)+vec4(.5,.2,.7+a.x,0)/dot(a*.5,a*1.3)*v;"
   "if(length(m)>.25)"
     "v=.5*r+.5*v;"
 "}\n"
 "#define rot(a)mat2(cos(a),-sin(a),sin(a),cos(a))\n"
 "vec2 r(vec3 v)"
 "{"
   "vec3 y=vec3(1);"
   "float x=2.,a,f,r;"
   "for(a=f=v.y;x<8e2;x*=1.6)"
     "v.xz*=rot(x),a+=abs(dot(sin(v*x)/x,.4*y)),f+=abs(dot(sin(v.xz*x*.5)/x,y.xz));"
   "r=1.+(f>.001?"
     "a:"
     "-exp(-f*f));"
   "return vec2(max(r,0),min(f,max(a,.07)));"
 "}"
 "vec3 p(vec3 v,vec3 a)"
 "{"
   "float x=2,f=.03;"
   "vec3 y;"
   "int m;"
   "do"
     "{"
       "vec2 s=r(v+x*a);"
       "float z=s.x;"
       "x+=f*s.y;"
       "f*=1.03;"
       "y=.95*y+.09*vec3(z*z*z,z*z,z);"
       "m++;"
     "}"
   "while(m<80);"
   "return y;"
 "}"
 "vec4 n(vec2 v,vec2 a,vec3 y)"
 "{"
   "vec3 f;"
   "f=normalize(f-y);"
   "vec3 m=normalize(cross(f,vec3(0,1,0)));"
   "y.z-=x*.4;"
   "return vec4(.75*log(.25+p(y,normalize(v.x*m+v.y*normalize(cross(m,f))+2.*f))),1);"
 "}"
 "float h(vec2 v)"
 "{"
   "v=vec2(v.x*2.*.57,v.y+v.x*.57);"
   "return dot(step(v.xy,v.yx),1.-v.yx);"
 "}\n"
 "#define fpow(x,k)float(x>k?pow((x-k)/(1.0-k),2.0):0.0)\n"
 "vec3 h(vec2 v,vec2 f,float y,vec3 a)"
 "{"
   "v-=f;"
   "return abs(v.x)<.2*y&&abs(v.y)<.2*y?"
     "mix(vec3(0),mix(vec3(0),a,.1+fpow(length(v/y),.1)*10.),smoothstep(0.,.3,h(abs(v*5./y)))):"
     "vec3(0);"
 "}"
 "vec3 a(vec2 v)"
 "{"
   "vec2 x=vec2(-1,.6);"
   "vec3 r=h(v,-x*.25,1.4,vec3(.25,.75,0));"
   "r+=h(v,x*.25,.5,vec3(1,.5,.5));"
   "r+=h(v,x*.1,1.6,vec3(1));"
   "r+=fpow(1-abs(length(x*.8-v)-.7),.9)*vec3(.1,.05,0);"
   "r+=vec3(.7)*fpow(max(1-length(v-x),0),.5);"
   "return r/(1+length(v-x));"
 "}"
 "void main()"
 "{"
   "if(x<0)"
     "{"
       "v=vec4(s(),1);"
       "return;"
     "}"
   "if(x<32||x>=78&&x<200)"
     "v=vec4(n(),1),p(f+.5*y);"
   "else"
     "{"
       "x=x>200?"
         "x-200:"
         "x;"
       "vec2 m=f/y+.5,r=x<36?"
         "-1.+2.*m:"
         "-1.62+2.725*m;"
       "r.x*=y.x/y.y;"
       "vec3 z=x<36?"
         "vec3(0,2,2):"
         "x>=42?"
           "vec3(0,3.1,.1):"
           "vec3(2.1,1.1,-2);"
       "v=n(r,m,z);"
       "v+=vec4(a(f/y.y*2),1);"
     "}"
   "if(x>=88)"
     "v*=89/4.-x/4.>0?"
       "89/4.-x/4.:"
       "0;"
   "v=x<3?"
     "v*(x/3):"
     "v;"
 "}";

#endif // SHADER_CODE_H_
