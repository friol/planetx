// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef FRAGMENT_INL_
# define FRAGMENT_INL_
# define VAR_o "v"

const char *fragment_frag =
 "#version 130\n"
 "out vec4 v;\n"
 "#define nm normalize\n"
 "#define glf gl_FragCoord\n"
 "#define ss smoothstep\n"
 "#define PI 3.14\n"
 "#define fr fract\n"
 "float r(vec3 v)"
 "{"
   "vec3 f=floor(v);"
   "v=fr(v);"
   "v=v*v*(3.-2.*v);"
   "float g=f.x+f.y*157.+113.*f.z;"
   "vec4 m=mix(fr(753.5*sin(g+vec4(0,1,157,158))),fr(753.5*sin(g+vec4(113,114,270,271))),v.z);"
   "vec2 n=mix(m.xy,m.zw,v.y);"
   "return mix(n.x,n.y,v.x);"
 "}"
 "float f(vec3 v)"
 "{"
   "mat3 f=mat3(.28,.6,.65,.06,.6,-.74,-.9,.26,.14);"
   "vec3 g=f*v;"
   "float x=r(g*5.),s=r(f*g*10.),y=r(g*20.),z=r(g*40.),m=length(v)-1.035;"
   "return m+(m<.1?"
     "(.1*x*x+.05*s*s+.02*y*y+.01*z*z)*.22:"
     "0.);"
 "}"
 "vec3 f(vec3 v,float y,mat3 g)"
 "{"
   "v=vec3(f(g*vec3(v.x+.5,v.yz)),f(g*vec3(v.x,v.y+.5,v.z)),f(g*vec3(v.xy,v.z+.5)));"
   "return nm(v-y);"
 "}"
 "vec2 n(vec2 v)"
 "{"
   "return v-floor(v*(1./289.))*289.;"
 "}"
 "vec3 t(vec3 v)"
 "{"
   "return v-floor(v*(1./289.))*289.;"
 "}"
 "vec3 m(vec3 v)"
 "{"
   "return t((v*34.+1.)*v);"
 "}"
 "float s(vec2 v)"
 "{"
   "const vec4 f=vec4(.21,.36,-.57,.03);"
   "vec2 y=floor(v+dot(v,f.yy));"
   "v=v-y+dot(y,f.xx);"
   "vec2 g=v.x>v.y?"
     "vec2(1,0):"
     "vec2(0,1);"
   "vec4 s=v.xyxy+f.xxzz;"
   "s.xy-=g;"
   "y=n(y);"
   "vec3 x=m(m(y.y+vec3(0,g.y,1))+y.x+vec3(0,g.x,1)),r=max(.5-vec3(dot(v,v),dot(s.xy,s.xy),dot(s.zw,s.zw)),0.);"
   "r=r*r*r*r;"
   "x=2.*fr(x*f.www)-1.;"
   "vec3 z=abs(x)-.5;"
   "x-=floor(x+.5);"
   "r*=1.79-.85*(x*x+z*z);"
   "vec3 i;"
   "i.x=x.x*v.x+z.x*v.y;"
   "i.yz=x.yz*s.xz+z.yz*s.yw;"
   "return 130.*dot(r,i);"
 "}"
 "float x(vec2 v)"
 "{"
   "float x=0.,f=1.,g=1.;"
   "for(int y=0;y<5;++y)"
     "x+=g*s(v*f),g*=.5,f*=2.;"
   "return x;"
 "}"
 "vec3 m(vec2 v,vec3 y,float s)"
 "{"
   "return x(v)*y*s;"
 "}"
 "float f(vec2 v,float f)"
 "{"
   "float y=length(v);"
   "f=sin(.018)/y+max(.01,.5-abs(v.x*v.y*1e3))*f*.1;"
   "return f*ss(1.,.1,y);"
 "}"
 "float g(vec2 v)"
 "{"
   "v=fr(v*vec2(123.34,456.21));"
   "v+=dot(v,v+45.32);"
   "return fr(v.x*v.y);"
 "}"
 "vec3 g(vec2 v,float y)"
 "{"
   "vec3 x=vec3(0);"
   "vec2 m=floor(v);"
   "for(int s=-1;s<=1;s++)"
     "for(int r=-1;r<=1;r++)"
       "{"
         "vec2 z=vec2(r,s);"
         "float n=g(m+z),d=fr(n),i=f(fr(v)-z-vec2(n,fr(n*34.))+.5,ss(.1,.9,d)*.46);"
         "vec3 P=sin(vec3(.12,.513,.79)*fr(n*2.2)*2.*PI)*.25+.75;"
         "P*=vec3(.69,.59,.49+d);"
         "i*=sin(y*.6+n*2.*PI)*.5+.5;"
         "x+=i*d*P;"
       "}"
   "return x;"
 "}"
 "void main()"
 "{"
   "float y=gl_TexCoord[0].x/1000;"
   "vec2 s=vec2(gl_TexCoord[0].y,gl_TexCoord[0].z),x=(glf.xy-.5*s.xy)/s.y;"
   "float z=y*.0015;"
   "vec3 r=m(x+vec2(.1),vec3(.3,.3,.2),1.);"
   "r+=m(x+vec2(0,.2),vec3(.2,.5,.4),.5);"
   "r*=vec3(.74*sin(y/16.),.12,.861*cos(y/32.));"
   "for(float v=0.;v<1.;v+=.2)"
     "{"
       "float f=fr(v+z);"
       "r+=g(x*mix(20.,.5,f)+v*453.2-y*.05,y)*f*ss(1.,.9,f);"
     "}"
   "vec3 i=vec3(2.*(glf.xy-.5*s.xy)/s.yy,2);"
   "i.y+=3.1-y/32.;"
   "vec3 n=vec3(0,0,-1);"
   "float P=y*.032;"
   "mat3 d=mat3(-sin(P),0.,cos(P),0.,1.,0.,cos(P),0.,sin(P));"
   "P=0.;"
   "vec3 w=i;"
   "if(y>78)"
     "i=vec3(8.*(glf.xy-.5*s.xy)/s.yy,3),n=vec3(0,0,-1.21);"
   "float c;"
   "for(int v=0;v<256;v++)"
     "{"
       "w=i+z*n;"
       "if(w.z<-1.)"
         "break;"
       "c=f(d*w*.54);"
       "if(c<=1e-5)"
         "break;"
       "else"
         " P+=.02+.01*abs(sin(y/16.));"
       "z+=c*.5;"
     "}"
   "if(c>1e-5)"
     "v=vec4(r,1);"
   "else"
     "{"
       "vec3 y=f(w,c,d);"
       "float s=dot(y,nm(vec3(0,3,1)));"
       "s=mix(clamp(f(d*(w-.5*n))/.5*1.2,0.,1.),max(0.,s),.7)*.1;"
       "v=vec4(mix(vec3(.61,.73,.5),vec3(.15,.16,.72),1.-(1.2-length(w))*2.)*s,1);"
     "}"
   "s=2.*(glf.xy/s.yy-vec2(.5/s.y*s.x,.5));"
   "v+=max(.51,min(1.,dot(vec3(s,sqrt(1.-dot(s,s))),vec3(0))))*vec4(max(0.,dot(nm(i),nm(vec3(0,2,1))))*pow(P,1.5)*vec3(.5,.5,.9),1);"
   "if(y<3.)"
     "v*=y/3;"
   "else if(y>=88)"
     "v*=89/4.-y/4.>0?"
       "89/4.-y/4.:"
       "0;"
 "}";

#endif // FRAGMENT_INL_
