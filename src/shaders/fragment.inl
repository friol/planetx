// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef FRAGMENT_INL_
# define FRAGMENT_INL_
# define VAR_o "v"

const char *fragment_frag =
 "#version 130\n"
 "out vec4 v;\n"
 "#define nm normalize\n"
 "#define glf gl_FragCoord\n"
 "#define ss smoothstep\n"
 "#define PI 3.14\n"
 "#define fr fract\n"
 "float f=gl_TexCoord[0].x/1000;"
 "vec2 s=vec2(gl_TexCoord[0].y,gl_TexCoord[0].z);"
 "float r(vec3 v)"
 "{"
   "vec3 s=floor(v);"
   "v=fr(v);"
   "v=v*v*(3.-2.*v);"
   "float f=s.x+s.y*157.+113.*s.z;"
   "vec4 m=mix(fr(753.5*sin(f+vec4(0,1,157,158))),fr(753.5*sin(f+vec4(113,114,270,271))),v.z);"
   "vec2 g=mix(m.xy,m.zw,v.y);"
   "return mix(g.x,g.y,v.x);"
 "}"
 "float m(vec3 v)"
 "{"
   "mat3 f=mat3(.28,.6,.65,.06,.6,-.74,-.9,.26,.14);"
   "vec3 s=f*v;"
   "float x=r(s*5.),m=r(f*s*10.),y=r(s*20.),z=r(s*40.),g=length(v)-1.035;"
   "return g+(g<.1?"
     "(.1*x*x+.05*m*m+.02*y*y+.01*z*z)*.22:"
     "0.);"
 "}"
 "vec3 m(vec3 v,float y,mat3 f)"
 "{"
   "v=vec3(m(f*vec3(v.x+.5,v.yz)),m(f*vec3(v.x,v.y+.5,v.z)),m(f*vec3(v.xy,v.z+.5)));"
   "return nm(v-y);"
 "}"
 "vec2 n(vec2 v)"
 "{"
   "return v-floor(v*(1./289.))*289.;"
 "}"
 "vec3 t(vec3 v)"
 "{"
   "return v-floor(v*(1./289.))*289.;"
 "}"
 "vec3 x(vec3 v)"
 "{"
   "return t((v*34.+1.)*v);"
 "}"
 "float P(vec2 v)"
 "{"
   "const vec4 s=vec4(.21,.36,-.57,.03);"
   "vec2 f=floor(v+dot(v,s.yy));"
   "v=v-f+dot(f,s.xx);"
   "vec2 m=v.x>v.y?"
     "vec2(1,0):"
     "vec2(0,1);"
   "vec4 g=v.xyxy+s.xxzz;"
   "g.xy-=m;"
   "f=n(f);"
   "vec3 y=x(x(f.y+vec3(0,m.y,1))+f.x+vec3(0,m.x,1)),r=max(.5-vec3(dot(v,v),dot(g.xy,g.xy),dot(g.zw,g.zw)),0.);"
   "r=r*r*r*r;"
   "y=2.*fr(y*s.www)-1.;"
   "vec3 z=abs(y)-.5;"
   "y-=floor(y+.5);"
   "r*=1.79-.85*(y*y+z*z);"
   "vec3 d;"
   "d.x=y.x*v.x+z.x*v.y;"
   "d.yz=y.yz*g.xz+z.yz*g.yw;"
   "return 130.*dot(r,d);"
 "}"
 "float h(vec2 v)"
 "{"
   "float f=0.,s=1.,m=1.;"
   "for(int y=0;y<5;++y)"
     "f+=m*P(v*s),m*=.5,s*=2.;"
   "return f;"
 "}"
 "vec3 P(vec2 v,vec3 s,float y)"
 "{"
   "return h(v)*s*y;"
 "}"
 "float P(vec2 v,float f)"
 "{"
   "float y=length(v);"
   "f=sin(.018)/y+max(.01,.5-abs(v.x*v.y*1e3))*f*.1;"
   "return f*ss(1.,.1,y);"
 "}"
 "float g(vec2 v)"
 "{"
   "v=fr(v*vec2(123.34,456.21));"
   "v+=dot(v,v+45.32);"
   "return fr(v.x*v.y);"
 "}"
 "vec3 g(vec2 v,float f)"
 "{"
   "vec3 y=vec3(0);"
   "vec2 s=floor(v);"
   "for(int m=-1;m<=1;m++)"
     "for(int r=-1;r<=1;r++)"
       "{"
         "vec2 z=vec2(r,m);"
         "float x=g(s+z),d=fr(x),i=P(fr(v)-z-vec2(x,fr(x*34.))+.5,ss(.1,.9,d)*.46);"
         "vec3 n=sin(vec3(.12,.513,.79)*fr(x*2.2)*2.*PI)*.25+.75;"
         "n*=vec3(.69,.59,.49+d);"
         "i*=sin(f*.6+x*2.*PI)*.5+.5;"
         "y+=i*d*n;"
       "}"
   "return y;"
 "}"
 "vec3 d(float v)"
 "{"
   "vec2 y=(glf.xy-.5*s.xy)/s.y;"
   "vec3 r=P(y+vec2(.1),vec3(.3,.3,.2),1.);"
   "r+=P(y+vec2(0,.2),vec3(.2,.5,.4),.5);"
   "r*=vec3(.74*sin(f/16.),.12,.861*cos(f/32.));"
   "for(float s=0.;s<1.;s+=.2)"
     "{"
       "float m=fr(s+v);"
       "r+=g(y*mix(20.,.5,m)+s*453.2-f*.05,f)*m*ss(1.,.9,m);"
     "}"
   "return r;"
 "}"
 "vec3 d(float y,vec3 x)"
 "{"
   "vec3 r=vec3(2.*(glf.xy-.5*s.xy)/s.yy,2);"
   "r.y+=3.1-f/32.;"
   "vec3 z=vec3(0,0,-1);"
   "float g=f*.032;"
   "mat3 d=mat3(-sin(g),0.,cos(g),0.,1.,0.,cos(g),0.,sin(g));"
   "if(f>78)"
     "r=vec3(8.*(glf.xy-.5*s.xy)/s.yy,3),z=vec3(0,0,-1.21);"
   "g=0;"
   "vec3 n;"
   "float i;"
   "for(int v=0;v<256;v++)"
     "{"
       "n=r+y*z;"
       "if(n.z<-1.)"
         "break;"
       "i=m(d*n*.54);"
       "if(i<=1e-5)"
         "break;"
       "else"
         " g+=.02+.01*abs(sin(f/16.));"
       "y+=i*.5;"
     "}"
   "if(i>1e-5)"
     "v=vec4(x,1);"
   "else"
     "{"
       "float y=dot(m(n,i,d),nm(vec3(0,3,1)));"
       "y=mix(clamp(m(d*(n-.5*z))/.5*1.2,0.,1.),max(0.,y),.7)*.1;"
       "v=vec4(mix(vec3(.61,.73,.5),vec3(.15,.16,.72),1.-(1.2-length(n))*2.)*y,1);"
     "}"
   "vec2 w=2.*(glf.xy/s.yy-vec2(.5/s.y*s.x,.5));"
   "v+=max(.51,min(1.,dot(vec3(w,sqrt(1.-dot(w,w))),vec3(0))))*vec4(max(0.,dot(nm(r),nm(vec3(0,2,1))))*pow(g,1.5)*vec3(.5,.5,.9),1);"
   "return x;"
 "}"
 "void main()"
 "{"
   "float y=f*.0015;"
   "vec3 m=d(y);"
   "m=d(y,m);"
   "if(f<3.)"
     "v*=f/3;"
   "else if(f>=88)"
     "v*=89/4.-f/4.>0?"
       "89/4.-f/4.:"
       "0;"
 "}";

#endif // FRAGMENT_INL_
