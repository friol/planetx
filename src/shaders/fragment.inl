// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef FRAGMENT_INL_
# define FRAGMENT_INL_
# define VAR_o "v"

const char *fragment_frag =
 "#version 130\n"
 "out vec4 v;"
 "float m=gl_TexCoord[0].x/1000;"
 "vec2 y=vec2(gl_TexCoord[0].y,gl_TexCoord[0].z),z=gl_FragCoord.xy-.5*y,x=z+.5*y;"
 "vec2 t(ivec2 v)"
 "{"
   "int m=v.x+v.y*21111;"
   "m^=m*m*(m<<13);"
   "float x=m*15+21+19>>16;"
   "return vec2(cos(x),sin(x));"
 "}"
 "float s(vec2 v)"
 "{"
   "ivec2 m=ivec2(floor(v));"
   "v=fract(v);"
   "vec2 y=v*v*(3-2*v);"
   "return mix(mix(dot(t(m+ivec2(0,0)),v-vec2(0)),dot(t(m+ivec2(1,0)),v-vec2(1,0)),y.x),mix(dot(t(m+ivec2(0,1)),v-vec2(0,1)),dot(t(m+ivec2(1,1)),v-vec2(1)),y.x),y.y);"
 "}"
 "vec3 s()"
 "{"
   "vec2 v=z/y.y,f;"
   "float x,r=0,d=0;"
   "for(;d<80;d++)"
     "{"
       "vec2 y=v*d*.1/(2*v.y+1.8);"
       "y.x-=m*.5;"
       "x=.5*s(y);"
       "y=mat2(1.6,1.2,-1.2,1.6)*y*1.1;"
       "x+=.25*s(y);"
       "y*=mat2(1.6,1.2,-1.2,1.6);"
       "x+=.125*s(y);"
       "y*=mat2(1.6,1.2,-1.2,1.6);"
       "x=smoothstep(-.04,.7,x);"
       "r+=x;"
     "}"
   "r/=59.5;"
   "v=z/y+.5;"
   "v=m>-60?"
     "v:"
     "m>-72?"
       "mod(v,.25)/.5:"
       "mod(v,.125)/.5;"
   "f=v*(1.-v)*5;"
   "return pow(f.x*f.y,.5)*mix(vec3(smoothstep(-.11,1.1,r)),vec3(6,2,.5),smoothstep(.05,1.,r))*2*vec3(.82,1.5,2.5);"
 "}\n"
 "#define rot(x)mat2(cos(x+vec4(0,33,11,0)))\n"
 "void h(vec2 x)"
 "{"
   "vec2 d,f=z/y.y;"
   "for(float f=0.,z;f++<12;v+=(10.-z)/max(length(d=mod((x+x-y)/y.y*z*mat2(rot(f)),3.)-1.)-vec4(5,6,9,0)/1000,.01)/3e2)"
     "z=mod(f-m*.1,10);"
   "vec4 s=v;"
   "x.y+=m<32?"
     "1500.-m*9:"
     "0;"
   "x-=v.xy=y.xy*.5;"
   "v=.8-sqrt(max(v-v,1.-dot(x/=m<32?"
     "v.y*2:"
     "v.y*.5,x)));"
   "v=(1.-v)/3.2*min(v+x.x+x.y*.8,-.1)+vec4(.5,.2,.7+x.x,0)/dot(x*.5,x*1.3)*v;"
   "v.xyz=m<32?"
     "length(vec2(f.x,1.6+f.y-m*.007))<1.05?"
       "v.xyz*.4:"
       ".3*s.xyz+.7*v.xyz:"
     "length(f)<.25?"
       "v.xyz:"
       ".3*s.xyz+.7*v.xyz;"
 "}"
 "float r(vec2 v)"
 "{"
   "v=vec2(v.x*2.*.6,v.y+v.x*.6);"
   "return dot(step(v.xy,v.yx),1-v.yx);"
 "}\n"
 "#define fpow(x,k)float(x>k?pow((x-k)/(1.0-k),2.0):0.0)\n"
 "vec3 h(vec2 v,vec2 m,float y,vec3 x)"
 "{"
   "v-=m;"
   "return abs(v.x)<.2*y&&abs(v.y)<.2*y?"
     "mix(vec3(0),mix(vec3(0),x,.1+fpow(length(v/y),.1)*10.),smoothstep(0.,.3,r(abs(v*5./y)))):"
     "vec3(0);"
 "}"
 "vec2 n(vec3 v)"
 "{"
   "float y=2.,x,m,f;"
   "for(x=m=v.y;y<8e2;y*=1.6)"
     "v.xz*=rot(y),x+=abs(dot(sin(v*y)/y,.3*vec3(1.2))),m+=abs(dot(sin(v.xz*y*.5)/y,vec3(1.2).xz));"
   "f=1.+(m>.01?"
     "x:"
     "-exp(-m*m));"
   "return vec2(max(f,0),min(m,max(x,.02)));"
 "}"
 "vec3 h(vec3 v,vec3 y)"
 "{"
   "float x=2,m=.1,f,z,r;"
   "vec3 d=vec3(0);"
   "for(r=0;r<80;r++)"
     "{"
       "vec2 s=n(v+x*y);"
       "f=s.x,z=s.y;"
       "x+=m*z;"
       "m*=1.03;"
       "d=.95*d+.09*vec3(f*f*f,f*f,f);"
     "}"
   "return d;"
 "}"
 "void n(vec2 x,vec2 f,vec3 r,vec2 d)"
 "{"
   "f=vec2(-1,.6);"
   "vec2 s=z/y.y*2;"
   "vec3 l=normalize(vec3(0)-r),c=normalize(cross(l,vec3(0,1,0))),i,n=vec3(0,m<36?"
     "36-m:"
     "0,9),a,g=(vec4(d,0,1).xyz*2.-y.xyx)/y.x,e=h(s,-f*.25,1.4,vec3(.25,.75,0))+h(s,f*.25,.5,vec3(1,.5,.5));"
   "e+=fpow(1-abs(length(f*.8-s)-.7),.9)*vec3(.1,.05,0);"
   "e+=vec3(.7)*fpow(max(1-length(s-f),0),.5);"
   "r.z-=m*.4;"
   "v.xyz=.55*log(.35+h(r,normalize(x.x*c+x.y*normalize(cross(c,l))+2.*l)));"
   "float t,k,C=0;"
   "for(;C<80.;C++,n+=.5*g*k)"
     "for(k=t=1.+m;t>m;t-=1.2)"
       "{"
         "i=n;"
         "i.xz*=rot(t);"
         "i.xy*=rot(1);"
         "for(a=abs(i);a.z<a.x||a.z<a.y;i=i.zxy,a=a.zxy)"
           ";"
         "k=min(k,length(i.xz-vec2(i.y,m<42?"
           "1:"
           ".1)*a.z/i.z)*.6-.1);"
       "}"
   "v.xyz=k<.1?"
     "fwidth(n*10.)*vec3(.4,.2,.1):"
     "v.xyz;"
   "v.xyz+=e/(1+length(s-f));"
 "}"
 "void main()"
 "{"
   "if(m<0)"
     "{"
       "v.xyz=s();"
       "return;"
     "}"
   "if(m<32||m>=78&&m<200)"
     "h(x);"
   "else"
     "{"
       "m=m>200?"
         "m-200:"
         "m;"
       "vec2 v=z/y+.5,f=m<36?"
         "-1+2*v:"
         "-1.62+2.72*v;"
       "f.x*=y.x/y.y;"
       "n(f,v,m<36?"
         "vec3(0,2,2):"
         "m>=42?"
           "vec3(0,3.1,.1):"
           "vec3(2.1,1.1,-2),x);"
     "}"
   "v=m<3?"
     "v*(m/3):"
     "v;"
 "}";

#endif // FRAGMENT_INL_
