// Generated with Shader Minifier 1.4.0 (https://github.com/laurentlb/Shader_Minifier/)
#ifndef FRAGMENT_INL_
# define FRAGMENT_INL_
# define VAR_iTime "v"
# define VAR_o "f"
# define VAR_xrez "x"
# define VAR_yrez "s"

const char *fragment_frag =
 "#version 430\n"
 "layout(location=0) uniform int v;"
 "layout(location=1) uniform int x;"
 "layout(location=2) uniform int s;"
 "out vec4 f;"
 "float m;"
 "vec2 y,r,l;"
 "vec2 t(ivec2 m)"
 "{"
   "int v=m.x+m.y*21111;"
   "v^=v*v*(v<<13);"
   "float l=v*15+40>>16;"
   "return vec2(cos(l),sin(l));"
 "}"
 "float p(vec2 v)"
 "{"
   "ivec2 m=ivec2(floor(v));"
   "v=fract(v);"
   "vec2 f=v*v*(3-2*v);"
   "return mix(mix(dot(t(m+ivec2(0,0)),v-vec2(0)),dot(t(m+ivec2(1,0)),v-vec2(1,0)),f.x),mix(dot(t(m+ivec2(0,1)),v-vec2(0,1)),dot(t(m+ivec2(1,1)),v-vec2(1)),f.x),f.y);"
 "}"
 "vec3 p(vec3 v,vec2 l,int x)"
 "{"
   "float f=0,s;"
   "for(;f<1;f+=.005)"
     "{"
       "vec2 i=y.xy,r=(l-i)/i.y*f;"
       "s=max((x==1?"
         ".05:"
         "1)-dot(r,r),0);"
       "r=r/(.2+sqrt(s))+m*(x==0?"
         ".1:"
         ".2);"
       "i=abs(fract(r*p(r*sin(m*.01)))-.5)*p(r*3);"
       "vec3 n=m<60?"
         "vec3(1,2,4):"
         "m<66?"
           "vec3(4,2,1):"
           "vec3(2,3,1);"
       "v+=n/(x==1?"
         "5e2:"
         "4e3)*s/(abs(max(i.x*.5+i,i).y-.01)+.1-f*.1);"
     "}"
   "return x==0?"
     "tanh(v*v):"
     "clamp(v,0,1);"
 "}\n"
 "#define rot(x)mat2(cos(x+vec4(0,33,11,0)))\n"
 "float t(vec2 v,float f,float m)"
 "{"
   "return smoothstep(0,f,m-length(v));"
 "}"
 "void h(vec2 v)"
 "{"
   "vec2 x,l=r/y.y;"
   "for(float l=0,s=0;l++<12;f+=(10.-s)/max(length(x=mod((v+v-y)/y.y*s*mat2(rot(l)),2.)-1.)-vec4(.01),.01)/3e2)"
     "s=mod(l-m*.1,10);"
   "l.y-=m<32?"
     "-2.1+m*.01:"
     "0;"
   "float s=m<32?"
     "4:"
     "1,i=t(vec2(l*2.4),1.,s)*1.1-t(vec2(l*2.8),.7,s)*.2;"
   "i-=t(vec2(l.x-sin(3)*.8,1.8*l.y-cos(3)*.6)*.8,1,s)*.1;"
   "vec3 n=vec3(i)*vec3(1,0,.5)+vec3(smoothstep(.1,.7,i))*vec3(1,1,0)+vec3(smoothstep(.4,.5,i));"
   "f.xyz=n+f.xyz*.2+f.xyz*vec3(.7*p(l*1.1),0.*p(l*1.7),.9*p(l*2.1));"
 "}"
 "float d(vec2 v)"
 "{"
   "v=vec2(v.x*2*.6,v.y+v.x*.6);"
   "return dot(step(v.xy,v.yx),1-v.yx);"
 "}\n"
 "#define fpow(x,k)float(x>k?pow((x-k)/(1-k),2):0)\n"
 "vec3 d(vec2 v,vec2 m,float x,vec3 s)"
 "{"
   "v-=m;"
   "return abs(v.x)<.2*x&&abs(v.y)<.2*x?"
     "mix(vec3(0),mix(vec3(0),s,.1+fpow(length(v/x),.1)*10),smoothstep(0.,.3,d(abs(v*5./x)))):"
     "vec3(0);"
 "}"
 "vec2 n(vec3 v)"
 "{"
   "float m=.2,l,x,f;"
   "for(l=x=v.y;m<8e2;m*=1.6)"
     "v.xz*=rot(m),l+=abs(dot(sin(v*m)/m,.3*vec3(1.2))),x+=abs(dot(sin(v.xz*m*.5)/m,vec3(1.2).xz));"
   "f=1.+(x>.01?"
     "l:"
     "-exp(-x*x));"
   "return vec2(max(f,0),min(x,max(l,.02)));"
 "}"
 "vec3 d(vec3 v,vec3 x)"
 "{"
   "float f=2,m=.1,l,s,r;"
   "vec3 y=vec3(0);"
   "for(r=0;r++<80;)"
     "{"
       "vec2 i=n(v+f*x);"
       "l=i.x,s=i.y;"
       "f+=m*s;"
       "m*=1.03;"
       "y=.95*y+.09*vec3(l*l*l,l*l,l);"
     "}"
   "return y;"
 "}"
 "void h(vec2 v,vec2 l,vec3 x,vec2 i)"
 "{"
   "l=m<36?"
     "vec2(0,-.8+(m-32)*.2):"
     "vec2(0);"
   "vec2 s=r/y.y*2;"
   "vec3 n=normalize(vec3(0)-x),z=normalize(cross(n,vec3(0,1,0))),e=d(s,-l*.25,1.4,vec3(.25,.75,0))+d(s,l*.25,.5,vec3(1,.5,.5));"
   "e+=fpow(1-abs(length(l*.8-s)-.7),.9)*vec3(.1,.05,0);"
   "e+=vec3(.7)*fpow(max(1-length(s-l),0),.5);"
   "x.z-=m*.4;"
   "f.xyz=.55*log(.35+d(x,normalize(v.x*z+v.y*normalize(cross(z,n))+2.*n)));"
   "i.y+=m<36?"
     "650-(m-28)*75:"
     "0;"
   "f.xyz=p(f.xyz,2*i,1)+e/(1+length(s-l));"
 "}"
 "float h(vec2 v,float l)"
 "{"
   "v.xy=v.yx;"
   "vec3 m=vec3(-.86,.5,1/sqrt(3));"
   "v=abs(v);"
   "v-=2*min(dot(m.xy,v),0)*m.xy;"
   "v-=vec2(clamp(v.x,-m.z*l,m.z*l),l);"
   "return length(v);"
 "}"
 "vec2 i(inout vec2 v)"
 "{"
   "vec2 m=vec2(1,sqrt(3)),l=m/2,f=mod(v,m)-l,s=mod(v-l,m)-l;"
   "f=dot(f,f)<dot(s,s)?"
     "f:"
     "s;"
   "m=(f-v+l)/m;"
   "v=f;"
   "return m-vec2(.5);"
 "}"
 "vec3 i(vec2 v,float m)"
 "{"
   "v=4*v;"
   "vec2 x=i(v)*.25*-vec2(-1,sqrt(3));"
   "float s=.25+.25*tanh(d(x+.25)+x.x+x.y-4+m*8);"
   "s=mix(mix(0,smoothstep(0,0,(-h(v,s)+s)*.25),smoothstep(0.,.1,m)),1,smoothstep(.9,1.,m));"
   "return mix(f.xyz,p(vec3(0),l,0),s);"
 "}"
 "float n(vec2 v,float m)"
 "{"
   "return m*(1/sqrt(3))-v.y-.5*sqrt(3)*max(abs(v.x)-sqrt(3)*v.y,0);"
 "}"
 "void main()"
 "{"
   "m=v/1e3;"
   "y=vec2(x,s);"
   "r=gl_FragCoord.xy-.5*y;"
   "l=r+.5*y;"
   "f=vec4(0);"
   "vec2 z=r/y+.5,d=m<36?"
     "-1+2*z:"
     "-1.62+2.72*z;"
   "d.x*=y.x/y.y;"
   "if(m>=28&&m<32)"
     "{"
       "h(l);"
       "if(n(d,(m-28)*2)>0)"
         "h(d,z,vec3(0,2,2),l);"
     "}"
   "else if(m<32||m>=78)"
     "h(l);"
   "else if(m>=54&&m<78)"
     "f.xyz=p(vec3(0),l,0);"
   "else"
     "{"
       "h(d,z,m<36?"
         "vec3(0,2,2):"
         "m<42?"
           "vec3(2,1,-2):"
           "m<48?"
             "vec3(-3,.2,1):"
             "vec3(0,3,.1),l);"
       "if(m>=50&&m<54)"
         "f.xyz=i(d,(m-50)*.25);"
     "}"
   "f=m<3?"
     "f*(m/3):"
     "m>=86?"
       "f*smoothstep(1,0,abs(m-86)):"
       "f;"
 "}";

#endif // FRAGMENT_INL_
