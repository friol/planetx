#pragma data_seg(".shader")
const char* part2 =
 "#version 130\n"
 "out vec4 v;\n"
 "#define nm normalize\n"
 "mat2 n(float v)"
 "{"
   "return mat2(cos(v),sin(v),-sin(v),cos(v));"
 "}"
 "vec3 m=vec3(1);"
 "vec2 s(in vec3 v)"
 "{"
   "float f=2,c,s,y;"
   "for(c=s=v.y;f<800;f*=1.6)"
     "v.xz*=n(f),c+=abs(dot(sin(v*f)/f,.4*m)),s+=abs(dot(sin(v.xz*f*.5)/f,m.xz));"
   "y=1+(s>.001?c:-exp(-s*s));"
   "return vec2(max(y,0),min(s,max(c,.07)));"
 "}"
 "vec3 n(in vec3 v,vec3 m)"
 "{"
   "float f=2.5,n=.031;"
   "vec3 y=vec3(0);"
   "for(int c=0;c<80;c++)"
     "{"
       "vec2 a=s(v+f*m);"
       "float z=a.x,l=a.y;"
       "f+=n*l;"
       "n*=1.03;"
       "y=.95*y+.09*vec3(z*z*z,z*z,z);"
     "}"
   "return y;"
 "}"
 "void main()"
 "{"
   "float y=gl_TexCoord[0].x/1000;"
   "vec2 a=vec2(gl_TexCoord[0].y,gl_TexCoord[0].z);"
   "float f=y;"
   "vec2 m=gl_FragCoord.xy/a.xy,c=-1+2*m;"
   "c.x*=a.x/a.y;"
   "vec3 s=vec3(0,2,2),z=vec3(0,0,0),l=nm(z-s),i=nm(cross(l,vec3(0,1,0))),g=nm(cross(i,l)),e=nm(c.x*i+c.y*g+2*l);"
   "s.z-=f*1.5;"
   "vec3 d=n(s,e);"
   "d=.75*log(.25+d);"
   "v=vec4(d,1);"
 "}";
